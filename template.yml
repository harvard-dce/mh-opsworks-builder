AWSTemplateFormatVersion : '2010-09-09'
Description: cookbook and app packager for mh-opsworks

Parameters:
  LambdaCodeBucket:
    Type: String
  PrimaryOCBucket:
    Type: String
  SecondaryOCBucket:
    Type: String
    Default: ""
  PrimaryCookbookBucket:
    Type: String
  SecondaryCookbookBucket:
    Type: String
    Default: ""
  DefaultRevision:
    Type: String
    Default: develop
  CookbookBuildSpec:
    Type: String
  OpencastBuildSpec:
    Type: String

Resources:

  MhOpsworksBuilderRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-service-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies:
      - PolicyName: !Sub "${AWS::StackName}-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
            - "logs:*"
            - "lambda:*"
            Resource: "*"

  MhOpsworksBuilderApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref AWS::StackName

  MhOpsworksBuilderResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref MhOpsworksBuilderApi
      ParentId: !GetAtt [MhOpsworksBuilderApi, RootResourceId]
      PathPart: "buildcookbook"

  MhOpsworksBuilderWebhook:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: MhOpsworksBuilderApi
      ResourceId:
        Ref: MhOpsworksBuilderResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.type: false
        method.request.querystring.content: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Credentials: !GetAtt [MhOpsworksBuilderRole, Arn]
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MhOpsworksBuilderFunction.Arn}/invocations
      MethodResponses:
      - ResponseModels:
          application/json: Empty
        StatusCode: 200

  MhOpsworksBuilderFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - MhOpsworksBuilderRole
    Properties:
      Handler: builder.handler
      Runtime: python3.6
      Timeout: 300
      Role: !GetAtt [MhOpsworksBuilderRole, Arn]
      FunctionName: !Sub "${AWS::StackName}"
      Environment:
        Variables:
          STACK_NAME: !Sub "${AWS::StackName}"
          COOKBOOK_BUILD_PROJECT: !Sub "cookbook-${AWS::StackName}"
          OPENCAST_BUILD_PROJECT: !Sub "opencast-${AWS::StackName}"
          PRIMARY_OPENCAST_BUCKET: !Ref PrimaryOCBucket
          PRIMARY_COOKBOOK_BUCKET: !Ref PrimaryCookbookBucket
          SECONDARY_OPENCAST_BUCKET: !Ref SecondaryOCBucket
          SECONDARY_COOKBOOK_BUCKET: !Ref SecondaryCookbookBucket
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Sub "${AWS::StackName}/builder.zip"


  MhOpsworksBuilderDeploy:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - MhOpsworksBuilderWebhook
    Properties:
      RestApiId: !Ref MhOpsworksBuilderApi
      Description: "Deployment for the mh opsworks builder api"
      StageName: "live"

  CookbookBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: MhOpsworksBuilderRole
    Properties:
      Name: !Sub "cookbook-${AWS::StackName}"
      TimeoutInMinutes: 5
      Description: Prepackage mh-opsworks-recipes cookbook
      Source:
        Location: https://github.com/harvard-dce/mh-opsworks-recipes.git
        Type: GITHUB
        BuildSpec: !Ref CookbookBuildSpec
        Auth:
          Type: OAUTH
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: aws/codebuild/ruby:2.2.5
        EnvironmentVariables:
          - Name: REVISION
            Value: !Ref DefaultRevision
      Artifacts:
        Location: !Ref PrimaryCookbookBucket
        Type: S3
        Name: cookbooks
      ServiceRole: !GetAtt [MhOpsworksBuilderRole, Arn]
      Tags:
        - Key: Project
          Value: MH
        - Key: OU
          Value: DE

  OpencastBuildsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-opencast"

  OpencastBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: MhOpsworksBuilderRole
    Properties:
      Name: !Sub "opencast-${AWS::StackName}"
      TimeoutInMinutes: 30
      BadgeEnabled: true
      Source:
        Location: "https://bitbucket.org/hudcede/matterhorn-dce-fork.git"
        Type: BITBUCKET
        BuildSpec: !Ref OpencastBuildSpec
        Auth:
          Type: OAUTH
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Type: LINUX_CONTAINER
        Image: aws/codebuild/java:openjdk-8
        EnvironmentVariables:
        - Name: REVISION
          Value: !Ref DefaultRevision
      Artifacts:
        Type: S3
        Location: !Ref PrimaryOCBucket
      ServiceRole: !GetAtt [MhOpsworksBuilderRole, Arn]
      Tags:
      - Key: Project
        Value: MH
      - Key: OU
        Value: DE
